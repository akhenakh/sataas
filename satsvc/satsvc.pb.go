// Code generated by protoc-gen-go. DO NOT EDIT.
// source: satsvc.proto

package satsvc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SatRequest struct {
	NoradNumber          int32    `protobuf:"varint,1,opt,name=norad_number,json=noradNumber,proto3" json:"norad_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SatRequest) Reset()         { *m = SatRequest{} }
func (m *SatRequest) String() string { return proto.CompactTextString(m) }
func (*SatRequest) ProtoMessage()    {}
func (*SatRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_satsvc_4b87c1b8a44ebf2d, []int{0}
}
func (m *SatRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SatRequest.Unmarshal(m, b)
}
func (m *SatRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SatRequest.Marshal(b, m, deterministic)
}
func (dst *SatRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SatRequest.Merge(dst, src)
}
func (m *SatRequest) XXX_Size() int {
	return xxx_messageInfo_SatRequest.Size(m)
}
func (m *SatRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SatRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SatRequest proto.InternalMessageInfo

func (m *SatRequest) GetNoradNumber() int32 {
	if m != nil {
		return m.NoradNumber
	}
	return 0
}

type SatInfosResponse struct {
	NoradNumber          int32                `protobuf:"varint,1,opt,name=norad_number,json=noradNumber,proto3" json:"norad_number,omitempty"`
	Name                 string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Tle1                 string               `protobuf:"bytes,3,opt,name=tle1,proto3" json:"tle1,omitempty"`
	Tle2                 string               `protobuf:"bytes,4,opt,name=tle2,proto3" json:"tle2,omitempty"`
	UpdateTime           *timestamp.Timestamp `protobuf:"bytes,5,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *SatInfosResponse) Reset()         { *m = SatInfosResponse{} }
func (m *SatInfosResponse) String() string { return proto.CompactTextString(m) }
func (*SatInfosResponse) ProtoMessage()    {}
func (*SatInfosResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_satsvc_4b87c1b8a44ebf2d, []int{1}
}
func (m *SatInfosResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SatInfosResponse.Unmarshal(m, b)
}
func (m *SatInfosResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SatInfosResponse.Marshal(b, m, deterministic)
}
func (dst *SatInfosResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SatInfosResponse.Merge(dst, src)
}
func (m *SatInfosResponse) XXX_Size() int {
	return xxx_messageInfo_SatInfosResponse.Size(m)
}
func (m *SatInfosResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SatInfosResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SatInfosResponse proto.InternalMessageInfo

func (m *SatInfosResponse) GetNoradNumber() int32 {
	if m != nil {
		return m.NoradNumber
	}
	return 0
}

func (m *SatInfosResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SatInfosResponse) GetTle1() string {
	if m != nil {
		return m.Tle1
	}
	return ""
}

func (m *SatInfosResponse) GetTle2() string {
	if m != nil {
		return m.Tle2
	}
	return ""
}

func (m *SatInfosResponse) GetUpdateTime() *timestamp.Timestamp {
	if m != nil {
		return m.UpdateTime
	}
	return nil
}

type Location struct {
	Latitude             float64  `protobuf:"fixed64,1,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude            float64  `protobuf:"fixed64,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Altitude             float64  `protobuf:"fixed64,3,opt,name=altitude,proto3" json:"altitude,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Location) Reset()         { *m = Location{} }
func (m *Location) String() string { return proto.CompactTextString(m) }
func (*Location) ProtoMessage()    {}
func (*Location) Descriptor() ([]byte, []int) {
	return fileDescriptor_satsvc_4b87c1b8a44ebf2d, []int{2}
}
func (m *Location) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Location.Unmarshal(m, b)
}
func (m *Location) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Location.Marshal(b, m, deterministic)
}
func (dst *Location) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Location.Merge(dst, src)
}
func (m *Location) XXX_Size() int {
	return xxx_messageInfo_Location.Size(m)
}
func (m *Location) XXX_DiscardUnknown() {
	xxx_messageInfo_Location.DiscardUnknown(m)
}

var xxx_messageInfo_Location proto.InternalMessageInfo

func (m *Location) GetLatitude() float64 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *Location) GetLongitude() float64 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

func (m *Location) GetAltitude() float64 {
	if m != nil {
		return m.Altitude
	}
	return 0
}

type SatLocationRequest struct {
	NoradNumber          int32                `protobuf:"varint,1,opt,name=norad_number,json=noradNumber,proto3" json:"norad_number,omitempty"`
	Time                 *timestamp.Timestamp `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *SatLocationRequest) Reset()         { *m = SatLocationRequest{} }
func (m *SatLocationRequest) String() string { return proto.CompactTextString(m) }
func (*SatLocationRequest) ProtoMessage()    {}
func (*SatLocationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_satsvc_4b87c1b8a44ebf2d, []int{3}
}
func (m *SatLocationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SatLocationRequest.Unmarshal(m, b)
}
func (m *SatLocationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SatLocationRequest.Marshal(b, m, deterministic)
}
func (dst *SatLocationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SatLocationRequest.Merge(dst, src)
}
func (m *SatLocationRequest) XXX_Size() int {
	return xxx_messageInfo_SatLocationRequest.Size(m)
}
func (m *SatLocationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SatLocationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SatLocationRequest proto.InternalMessageInfo

func (m *SatLocationRequest) GetNoradNumber() int32 {
	if m != nil {
		return m.NoradNumber
	}
	return 0
}

func (m *SatLocationRequest) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

type GenPassesRequest struct {
	NoradNumber          int32                `protobuf:"varint,1,opt,name=norad_number,json=noradNumber,proto3" json:"norad_number,omitempty"`
	Location             *Location            `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	StartTime            *timestamp.Timestamp `protobuf:"bytes,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	StopTime             *timestamp.Timestamp `protobuf:"bytes,4,opt,name=stop_time,json=stopTime,proto3" json:"stop_time,omitempty"`
	StepSeconds          int32                `protobuf:"varint,5,opt,name=step_seconds,json=stepSeconds,proto3" json:"step_seconds,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GenPassesRequest) Reset()         { *m = GenPassesRequest{} }
func (m *GenPassesRequest) String() string { return proto.CompactTextString(m) }
func (*GenPassesRequest) ProtoMessage()    {}
func (*GenPassesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_satsvc_4b87c1b8a44ebf2d, []int{4}
}
func (m *GenPassesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GenPassesRequest.Unmarshal(m, b)
}
func (m *GenPassesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GenPassesRequest.Marshal(b, m, deterministic)
}
func (dst *GenPassesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenPassesRequest.Merge(dst, src)
}
func (m *GenPassesRequest) XXX_Size() int {
	return xxx_messageInfo_GenPassesRequest.Size(m)
}
func (m *GenPassesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GenPassesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GenPassesRequest proto.InternalMessageInfo

func (m *GenPassesRequest) GetNoradNumber() int32 {
	if m != nil {
		return m.NoradNumber
	}
	return 0
}

func (m *GenPassesRequest) GetLocation() *Location {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *GenPassesRequest) GetStartTime() *timestamp.Timestamp {
	if m != nil {
		return m.StartTime
	}
	return nil
}

func (m *GenPassesRequest) GetStopTime() *timestamp.Timestamp {
	if m != nil {
		return m.StopTime
	}
	return nil
}

func (m *GenPassesRequest) GetStepSeconds() int32 {
	if m != nil {
		return m.StepSeconds
	}
	return 0
}

type Pass struct {
	Aos                  *timestamp.Timestamp `protobuf:"bytes,1,opt,name=aos,proto3" json:"aos,omitempty"`
	Los                  *timestamp.Timestamp `protobuf:"bytes,2,opt,name=los,proto3" json:"los,omitempty"`
	AosAzimuth           float64              `protobuf:"fixed64,3,opt,name=aos_azimuth,json=aosAzimuth,proto3" json:"aos_azimuth,omitempty"`
	LosAzimuth           float64              `protobuf:"fixed64,4,opt,name=los_azimuth,json=losAzimuth,proto3" json:"los_azimuth,omitempty"`
	MaxElevation         float64              `protobuf:"fixed64,5,opt,name=max_elevation,json=maxElevation,proto3" json:"max_elevation,omitempty"`
	AosRangeRate         float64              `protobuf:"fixed64,6,opt,name=aos_range_rate,json=aosRangeRate,proto3" json:"aos_range_rate,omitempty"`
	LosRangeRate         float64              `protobuf:"fixed64,7,opt,name=los_range_rate,json=losRangeRate,proto3" json:"los_range_rate,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Pass) Reset()         { *m = Pass{} }
func (m *Pass) String() string { return proto.CompactTextString(m) }
func (*Pass) ProtoMessage()    {}
func (*Pass) Descriptor() ([]byte, []int) {
	return fileDescriptor_satsvc_4b87c1b8a44ebf2d, []int{5}
}
func (m *Pass) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pass.Unmarshal(m, b)
}
func (m *Pass) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pass.Marshal(b, m, deterministic)
}
func (dst *Pass) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pass.Merge(dst, src)
}
func (m *Pass) XXX_Size() int {
	return xxx_messageInfo_Pass.Size(m)
}
func (m *Pass) XXX_DiscardUnknown() {
	xxx_messageInfo_Pass.DiscardUnknown(m)
}

var xxx_messageInfo_Pass proto.InternalMessageInfo

func (m *Pass) GetAos() *timestamp.Timestamp {
	if m != nil {
		return m.Aos
	}
	return nil
}

func (m *Pass) GetLos() *timestamp.Timestamp {
	if m != nil {
		return m.Los
	}
	return nil
}

func (m *Pass) GetAosAzimuth() float64 {
	if m != nil {
		return m.AosAzimuth
	}
	return 0
}

func (m *Pass) GetLosAzimuth() float64 {
	if m != nil {
		return m.LosAzimuth
	}
	return 0
}

func (m *Pass) GetMaxElevation() float64 {
	if m != nil {
		return m.MaxElevation
	}
	return 0
}

func (m *Pass) GetAosRangeRate() float64 {
	if m != nil {
		return m.AosRangeRate
	}
	return 0
}

func (m *Pass) GetLosRangeRate() float64 {
	if m != nil {
		return m.LosRangeRate
	}
	return 0
}

type Passes struct {
	Passes               []*Pass  `protobuf:"bytes,1,rep,name=passes,proto3" json:"passes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Passes) Reset()         { *m = Passes{} }
func (m *Passes) String() string { return proto.CompactTextString(m) }
func (*Passes) ProtoMessage()    {}
func (*Passes) Descriptor() ([]byte, []int) {
	return fileDescriptor_satsvc_4b87c1b8a44ebf2d, []int{6}
}
func (m *Passes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Passes.Unmarshal(m, b)
}
func (m *Passes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Passes.Marshal(b, m, deterministic)
}
func (dst *Passes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Passes.Merge(dst, src)
}
func (m *Passes) XXX_Size() int {
	return xxx_messageInfo_Passes.Size(m)
}
func (m *Passes) XXX_DiscardUnknown() {
	xxx_messageInfo_Passes.DiscardUnknown(m)
}

var xxx_messageInfo_Passes proto.InternalMessageInfo

func (m *Passes) GetPasses() []*Pass {
	if m != nil {
		return m.Passes
	}
	return nil
}

func init() {
	proto.RegisterType((*SatRequest)(nil), "SatRequest")
	proto.RegisterType((*SatInfosResponse)(nil), "SatInfosResponse")
	proto.RegisterType((*Location)(nil), "Location")
	proto.RegisterType((*SatLocationRequest)(nil), "SatLocationRequest")
	proto.RegisterType((*GenPassesRequest)(nil), "GenPassesRequest")
	proto.RegisterType((*Pass)(nil), "Pass")
	proto.RegisterType((*Passes)(nil), "Passes")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PredictionClient is the client API for Prediction service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PredictionClient interface {
	SatInfos(ctx context.Context, in *SatRequest, opts ...grpc.CallOption) (*SatInfosResponse, error)
	SatLocation(ctx context.Context, in *SatLocationRequest, opts ...grpc.CallOption) (*Location, error)
	GenPasses(ctx context.Context, in *GenPassesRequest, opts ...grpc.CallOption) (*Passes, error)
}

type predictionClient struct {
	cc *grpc.ClientConn
}

func NewPredictionClient(cc *grpc.ClientConn) PredictionClient {
	return &predictionClient{cc}
}

func (c *predictionClient) SatInfos(ctx context.Context, in *SatRequest, opts ...grpc.CallOption) (*SatInfosResponse, error) {
	out := new(SatInfosResponse)
	err := c.cc.Invoke(ctx, "/Prediction/SatInfos", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *predictionClient) SatLocation(ctx context.Context, in *SatLocationRequest, opts ...grpc.CallOption) (*Location, error) {
	out := new(Location)
	err := c.cc.Invoke(ctx, "/Prediction/SatLocation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *predictionClient) GenPasses(ctx context.Context, in *GenPassesRequest, opts ...grpc.CallOption) (*Passes, error) {
	out := new(Passes)
	err := c.cc.Invoke(ctx, "/Prediction/GenPasses", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PredictionServer is the server API for Prediction service.
type PredictionServer interface {
	SatInfos(context.Context, *SatRequest) (*SatInfosResponse, error)
	SatLocation(context.Context, *SatLocationRequest) (*Location, error)
	GenPasses(context.Context, *GenPassesRequest) (*Passes, error)
}

func RegisterPredictionServer(s *grpc.Server, srv PredictionServer) {
	s.RegisterService(&_Prediction_serviceDesc, srv)
}

func _Prediction_SatInfos_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SatRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PredictionServer).SatInfos(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Prediction/SatInfos",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PredictionServer).SatInfos(ctx, req.(*SatRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Prediction_SatLocation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SatLocationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PredictionServer).SatLocation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Prediction/SatLocation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PredictionServer).SatLocation(ctx, req.(*SatLocationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Prediction_GenPasses_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GenPassesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PredictionServer).GenPasses(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Prediction/GenPasses",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PredictionServer).GenPasses(ctx, req.(*GenPassesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Prediction_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Prediction",
	HandlerType: (*PredictionServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SatInfos",
			Handler:    _Prediction_SatInfos_Handler,
		},
		{
			MethodName: "SatLocation",
			Handler:    _Prediction_SatLocation_Handler,
		},
		{
			MethodName: "GenPasses",
			Handler:    _Prediction_GenPasses_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "satsvc.proto",
}

func init() { proto.RegisterFile("satsvc.proto", fileDescriptor_satsvc_4b87c1b8a44ebf2d) }

var fileDescriptor_satsvc_4b87c1b8a44ebf2d = []byte{
	// 543 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x93, 0xcf, 0x8e, 0xd3, 0x3e,
	0x10, 0xc7, 0x9b, 0x36, 0xed, 0x36, 0x93, 0xfe, 0x7e, 0xda, 0x35, 0x97, 0x28, 0x02, 0x6d, 0x37,
	0x80, 0x28, 0xd2, 0xca, 0x15, 0xe5, 0x80, 0x10, 0x27, 0x0e, 0x08, 0x21, 0x21, 0xb4, 0x4a, 0xb9,
	0x87, 0x69, 0x3b, 0x5b, 0x2a, 0x39, 0x71, 0x88, 0x9d, 0xd5, 0x8a, 0xf7, 0x80, 0xc7, 0xe0, 0xe5,
	0x78, 0x01, 0x64, 0x3b, 0x69, 0xcb, 0x22, 0xd1, 0x72, 0xf3, 0x7c, 0xe7, 0x33, 0x9e, 0x3f, 0x1e,
	0xc3, 0x48, 0xa1, 0x56, 0x37, 0x4b, 0x5e, 0x56, 0x52, 0xcb, 0xf8, 0x7c, 0x2d, 0xe5, 0x5a, 0xd0,
	0xd4, 0x5a, 0x8b, 0xfa, 0x7a, 0xaa, 0x37, 0x39, 0x29, 0x8d, 0x79, 0xe9, 0x80, 0x64, 0x0a, 0x30,
	0x47, 0x9d, 0xd2, 0x97, 0x9a, 0x94, 0x66, 0x17, 0x30, 0x2a, 0x64, 0x85, 0xab, 0xac, 0xa8, 0xf3,
	0x05, 0x55, 0x91, 0x37, 0xf6, 0x26, 0xfd, 0x34, 0xb4, 0xda, 0x07, 0x2b, 0x25, 0x3f, 0x3c, 0x38,
	0x9d, 0xa3, 0x7e, 0x57, 0x5c, 0x4b, 0x95, 0x92, 0x2a, 0x65, 0xa1, 0xe8, 0x88, 0x38, 0xc6, 0xc0,
	0x2f, 0x30, 0xa7, 0xa8, 0x3b, 0xf6, 0x26, 0x41, 0x6a, 0xcf, 0x46, 0xd3, 0x82, 0x9e, 0x45, 0x3d,
	0xa7, 0x99, 0x73, 0xa3, 0xcd, 0x22, 0x7f, 0xab, 0xcd, 0xd8, 0x2b, 0x08, 0xeb, 0x72, 0x85, 0x9a,
	0x32, 0x53, 0x7e, 0xd4, 0x1f, 0x7b, 0x93, 0x70, 0x16, 0x73, 0xd7, 0x1b, 0x6f, 0x7b, 0xe3, 0x1f,
	0xdb, 0xde, 0x52, 0x70, 0xb8, 0x11, 0x92, 0x4f, 0x30, 0x7c, 0x2f, 0x97, 0xa8, 0x37, 0xb2, 0x60,
	0x31, 0x0c, 0x05, 0xea, 0x8d, 0xae, 0x57, 0x64, 0x6b, 0xf4, 0xd2, 0xad, 0xcd, 0xee, 0x43, 0x20,
	0x64, 0xb1, 0x76, 0xce, 0xae, 0x75, 0xee, 0x04, 0x13, 0x89, 0xa2, 0x89, 0xec, 0xb9, 0xc8, 0xd6,
	0x4e, 0xd6, 0xc0, 0xe6, 0xa8, 0xdb, 0x24, 0xc7, 0xcf, 0x92, 0x71, 0xf0, 0x6d, 0x43, 0xdd, 0x83,
	0x0d, 0x59, 0x2e, 0xf9, 0xe9, 0xc1, 0xe9, 0x5b, 0x2a, 0xae, 0x50, 0x29, 0x52, 0xff, 0x90, 0xe7,
	0x31, 0x0c, 0x45, 0x53, 0x5d, 0x93, 0x2b, 0xe0, 0xdb, 0x72, 0xb7, 0x2e, 0xf6, 0x12, 0x40, 0x69,
	0xac, 0xb4, 0x9b, 0x72, 0xef, 0x60, 0x51, 0x81, 0xa5, 0x8d, 0xcd, 0x5e, 0x40, 0xa0, 0xb4, 0x2c,
	0x5d, 0xa4, 0x7f, 0x30, 0x72, 0x68, 0x60, 0x1b, 0x78, 0x01, 0x23, 0xa5, 0xa9, 0xcc, 0x14, 0x2d,
	0x65, 0xb1, 0x52, 0xf6, 0x6d, 0xfb, 0x69, 0x68, 0xb4, 0xb9, 0x93, 0x92, 0x6f, 0x5d, 0xf0, 0x4d,
	0xcb, 0xec, 0x12, 0x7a, 0x28, 0x95, 0x6d, 0xf0, 0xef, 0xd7, 0x1b, 0xcc, 0xd0, 0x42, 0xaa, 0x23,
	0x66, 0x6b, 0x30, 0x76, 0x0e, 0x21, 0x4a, 0x95, 0xe1, 0xd7, 0x4d, 0x5e, 0xeb, 0xcf, 0xcd, 0x13,
	0x03, 0x4a, 0xf5, 0xda, 0x29, 0x06, 0x10, 0x7b, 0x80, 0xef, 0x00, 0xb1, 0x03, 0x1e, 0xc2, 0x7f,
	0x39, 0xde, 0x66, 0x24, 0xe8, 0xc6, 0x4d, 0xba, 0x6f, 0x91, 0x51, 0x8e, 0xb7, 0x6f, 0x5a, 0x8d,
	0x3d, 0x82, 0xff, 0x4d, 0x9a, 0x0a, 0x8b, 0x35, 0x65, 0x15, 0x6a, 0x8a, 0x06, 0x8e, 0x42, 0xa9,
	0x52, 0x23, 0xa6, 0xa8, 0xc9, 0x50, 0xe2, 0x77, 0xea, 0xc4, 0x51, 0x62, 0x8f, 0x4a, 0x9e, 0xc0,
	0xc0, 0x6d, 0x02, 0x7b, 0x00, 0x83, 0xd2, 0x9e, 0x22, 0x6f, 0xdc, 0x9b, 0x84, 0xb3, 0x3e, 0x37,
	0x8e, 0xb4, 0x11, 0x67, 0xdf, 0x3d, 0x80, 0xab, 0x8a, 0x56, 0x9b, 0xa5, 0xad, 0xe1, 0x12, 0x86,
	0xed, 0x07, 0x66, 0x21, 0xdf, 0xfd, 0xfe, 0xf8, 0x8c, 0xdf, 0xfd, 0xd8, 0x49, 0x87, 0x4d, 0x21,
	0xdc, 0x5b, 0x6e, 0x76, 0x8f, 0xff, 0xb9, 0xea, 0xf1, 0x6e, 0x9b, 0x92, 0x0e, 0x7b, 0x0a, 0xc1,
	0x76, 0x47, 0xd9, 0x19, 0xbf, 0xbb, 0xaf, 0xf1, 0x09, 0x77, 0x76, 0xd2, 0x59, 0x0c, 0xec, 0x6b,
	0x3c, 0xff, 0x15, 0x00, 0x00, 0xff, 0xff, 0x63, 0x56, 0x0f, 0xc3, 0xb4, 0x04, 0x00, 0x00,
}
