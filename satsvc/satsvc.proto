syntax = "proto3";

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";


service Prediction {
    // Categories returns all known categories with norad numbers
    rpc Categories (google.protobuf.Empty) returns (CategoriesResponse) {}

    // SatsInfos returns norad number and TLEs for active sats
    rpc SatsInfos (SatsRequest) returns (SatsInfosResponse) {}

    // SatsLocations returns a stream of locations for a list of sats or a category
    rpc SatsLocations (SatsRequest) returns (stream SatsLocationsResponse) {}

    // SatLocationFromObs returns a stream of observations from a location for a list of sats or a category
    rpc SatLocationFromObs (SatLocationFromObsRequest) returns (stream Observation) {}

    // GenLocations returns the predicted locations for a list of sats or a category
    rpc GenLocations(GenLocationsRequest) returns (GenLocationsResponse) {}

    // GenPasses returns the predicted passes for a sat
    rpc GenPasses(GenPassesRequest) returns (Passes) {}
}

message SatInfos {
    int32 norad_number = 1;
    string name = 2;
    string tle1 = 3;
    string tle2 = 4;
    google.protobuf.Timestamp update_time = 5;
}

message SatsInfosResponse {
    repeated SatInfos sat_infos = 1;
}

message Location {
    double latitude = 1;
    double longitude = 2;
    double altitude = 3;
}

message SatLocation {
    int32 norad_number = 1;
    double latitude = 2;
    double longitude = 3;
    double altitude = 4;
}

message Category {
    int32 id = 1;
    string name = 2;
    repeated int32 sats = 3; // as norad numbers
}

message SatsLocationsResponse {
    repeated SatLocation sat_locations = 1;
}

message CategoriesResponse {
    repeated Category categories = 1;
}

message Observation {
    int32 norad_number = 1;
    Location sat_location = 2;
	double azimuth = 3;
	double elevation = 4;
	double range = 5;
	double range_rate = 6;
}

message SatsRequest {
    repeated int32 norad_numbers = 1;
    int32 category = 2; // if a category is given it overrides norad_numbers
}

message SatLocationFromObsRequest {
    repeated int32 norad_numbers = 1;
    Location observer_location = 2;
    int32 steps_ms = 3;
}

message GenPassesRequest {
    int32 norad_number = 1;
    Location observer_location = 2;
    google.protobuf.Timestamp start_time = 3;
    google.protobuf.Timestamp stop_time = 4;
    int32 step_seconds = 5;
    double min_elevation = 6;
}

message GenLocationsRequest {
    repeated int32 norad_numbers = 1;
    int32 category = 2; // if a category is given it overrides norad_numbers
    google.protobuf.Timestamp start_time = 3;
    google.protobuf.Timestamp stop_time = 4;
    int32 step_seconds = 5;
}

message GenLocationsResponse {
    repeated GenLocations locations = 1;
    int32 step_seconds = 2;
}

message GenLocations {
    int32 norad_number = 1;
    repeated Location location = 2;
}

message Pass {
    google.protobuf.Timestamp aos = 1;
    google.protobuf.Timestamp los = 2;
    double aos_azimuth = 3;
    double los_azimuth = 4;
	double max_elevation = 5;
    double aos_range_rate = 6;
    double los_range_rate = 7;
}

message Passes {
    repeated Pass passes = 1;
}